In no particular order:

1)  Get the basic protocol elements implemented:  action requests, motion
    updates.
2)  Collision detection?  No idea where to start on that.
3)  Work on getting server neighbors and server notification protocol
    activity worked out.
4)  Figure out who can see what, and only send position updates on visible
    objects.  Again, sectors might be required before this will happen.
5)  Define and implement more actions/skills.
6)  Add positional and bounding data to the geometry files.
7)  See about making the octrees (part of the sector) dynamic, since
    they will only have bounding volumes in them, and things will move
    around (of course).  The zone should also handle the octrees
    dynamically, creating them as needed, and deleting them when
    empty.
8)  Figure out how we want to do landscape.  That might be a way off,
    since we'll be starting with space, but it's going to come up.
9)  Move the configuration-handling logic into the modules where the given
    configuration data is used.  We might look at doing a multi-level config
    structure, and possibly an ini-style config file, with the section
    titles as the module names (zone, database, etc.), and the elements in
    those sections handled by some config parser within the module.  A
    friend function?  A separate (static?) struct?
10) struct addrinfo actually contains the port we're interested in, so
    we should consider whether we need a separate port argument to the
    socket constructors.  The constructors already take an addrinfo.
