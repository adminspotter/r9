		      Map of the server process

To get it all straight in my head, and to make a clear map of what
happens in the server program, this is the process flow map.  Items
with a * next to the number are not yet implemented.

Steps with letters are performed by threads which monitor some
activity queues, and are not "steps" per se.  They all happen
simultaneously, and in no particular order.

$Id$

1) Process command-line and load configuration file.
2) Detach from the controlling terminal.
3) Create the pid file, terminating if unable.
4) Turn on logging.
5) Install signal handlers.

6) Create the zone, including the action, motion, and update queues.
6a*) Process each action packet.
6b*) Process any motion, and queue up a position update.
6c*) Update each game object's state, and queue up any required motion.
6d*) Pass all position updates to each user's control object.

7) Set up access queue.
7a) On successful login, create the control object, add the user to
    socket userlist.
7b) On successful logout, destroy the control object, remove the user
    from socket userlist.

8) Set up each listening socket, with associated sending queues.
8a) Pass all login and logout packets to the access object.
8c) Pass all action requests to the user's control object.

9) Destroy access queue.
10) Destroy each listening socket, closing all client connections.
11) Destroy the zone, including terminating the thread pools.
12) Turn off logging.
13) Delete the pid file.
14) Cleanup the configuration structure.
15) Reset all the signal handlers to defaults.
